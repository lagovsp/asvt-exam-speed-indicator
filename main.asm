processor 12F675
#include p12f675.inc

__CONFIG 0x3FD4

#DEFINE SH_CP		GPIO, GP1
#DEFINE DS			GPIO, GP2
#DEFINE ST_CP		GPIO, GP4

LCD_DEC		EQU 	0x30
LCD_A		EQU		0x41
LCD_POINT	EQU		0x2E


CBLOCK 	0x20
	LCD_DATA		;20
	LCD_SETTING		;21
	DELAY_1			;22
	DELAY_2			;23
	TEMP
	UP7
	DOWN228
	FRONTS
	FRONT_SCALER
	BCD_TENS_UNITS
	BCD_THOUSANDS_HUNDREDS
	BCD_TENS_UNITS_AFTER_ADD
	BCD_THOUSANDS_HUNDREDS_AFTER_ADD
	MASK
	REG_SHIFT_8
	H_BYTE
	Z_BYTE
	PLUS_BYTE
	MINUS_BYTE
	SOUND_COUNTER_1
	SOUND_COUNTER_2
	SOUND_COUNTER_3
	FRONT_DOUBLER
ENDC

; НАЧАЛО ПРОГРАММЫ
ORG	0x00
	GOTO  START

; ОБРАБОТЧИК ПРЕРЫВАНИЙ
INT ORG 0x04
	BTFSS 	INTCON, T0IF
	GOTO 	INT_RET

	DECFSZ 	DOWN228
	GOTO 	INT_RET
	CALL	RESET_DOWN228_COUNTER

	DECFSZ 	UP7
	GOTO 	INT_RET

	CALL 	GET_TURNS
	
	CALL 	RESET_UP7_COUNTER

	CLRF	FRONTS
	
	GOTO 	INT_RET
INT_RET
	CALL	RESET_TMR0
	RETFIE

; ИНИЦИАЛИЗАЦИЯ ПРОГРАММЫ 
START
	BANKSEL	GPIO
	CLRF 	GPIO    		; Очистка порта GPIO
   
	BANKSEL	CMCON 
	MOVLW 	0x07
	MOVWF 	CMCON 			; Отключение компаратора
   
	BANKSEL ANSEL
	BCF 	ANSEL, ANS0		; Отключение аналоговой цепи для вывода GP0
	BCF 	ANSEL, ANS1 	; Отключение аналоговой цепи для вывода GP1
	BCF 	ANSEL, ANS2 	; Отключение аналоговой цепи для вывода GP2
	BCF 	ANSEL, ANS3 	; Отключение аналоговой цепи для вывода GP3
	BCF 	ANSEL, ADCS2 	; Выбор тактового сигнала F/8
	BCF 	ANSEL, ADCS1 	; Выбор тактового сигнала F/8
	BSF 	ANSEL, ADCS0 	; Выбор тактового сигнала F/8
   
	BANKSEL TRISIO
	MOVLW 	0x09			; CHANGED 0x01 -> 0x09
	MOVWF 	TRISIO  		; Перемещение аккумулятора в регистр TRISIO (управление каналами GPIO 0 - выход, 1 - вход)
   
	BANKSEL	ADCON0
	BSF 	ADCON0, ADFM 	; Правое выравниевание результата
	BCF 	ADCON0, VCFG 	; Напряжение питания Vdd - опорное напряжение
	BCF 	ADCON0, CHS1 	; Выбор аналогового канала AN0
	BCF 	ADCON0, CHS0 	; Выбор аналогового канала AN0
	BCF 	ADCON0, 1 		; Модуль АЦП находится в ожидании
	BSF 	ADCON0, ADON 	; модуль АЦП включен
   
	BANKSEL	WPU
	CLRF 	WPU 			; Отключаем подтягивающие резисторы
   
	BANKSEL	INTCON
	CLRF 	INTCON 			; Глобальный запрет прерываний  
	BSF 	INTCON, T0IE 	; Разрешить прерывания от таймера 0
	BSF 	INTCON, GIE 	; Разрешить общие прерывания
   
	BANKSEL	IOCB
	CLRF 	IOCB 			; Отключаем прерывания по изменению на уровнях сигнала GP5-0
   
	BANKSEL	PIE1
	CLRF 	PIE1 			; Отключаем переферийные прерывания
   
	BANKSEL	T1CON
	CLRF 	T1CON 			; Отключаем модуль таймера TMR1
   
	BANKSEL	VRCON
	CLRF 	VRCON 			; Отключаем источник опорного напряжения 
   
	BANKSEL	OPTION_REG
	MOVLW 	0xC0
	MOVWF 	OPTION_REG 		; Настройка OPTION_REG
   
	CALL 	INIT_LCD

	CALL 	RESET_DOWN228_COUNTER
	CALL 	RESET_UP7_COUNTER

	CALL 	RESET_TMR0
   
	CALL	RESET_FRONT_SCALER

	CLRF	FRONTS

	GOTO 	MAIN

MAIN
	; fronts = импульсы
	; step = шаг = 10 град
	; 4 * fronts * step = 360 -> fronts = 360 / (4 * step) = 9
	
	CALL	SCAN_FRONT			; ЦИКЛ
	DECFSZ	FRONT_SCALER
	GOTO	MAIN
	
	CALL	RESET_FRONT_SCALER
	
	INCF	FRONTS, F
	GOTO 	MAIN

SCAN_FRONT
	BTFSC	GPIO, 3			; Ждем пока не 0
	GOTO	SCAN_FRONT
WAIT_FOR_FRONT
	BTFSS	GPIO, 3			; Ждем пока не 1
	GOTO 	WAIT_FOR_FRONT	; Пришел фронт
	RETURN

RESET_FRONT_SCALER
	MOVLW 	0x09
	MOVWF 	FRONT_SCALER
	RETURN

RESET_DOWN228_COUNTER
	MOVLW 	0xE4			; 228
	MOVWF 	DOWN228
	RETURN

RESET_UP7_COUNTER
	MOVLW 	0x08			; 8
	MOVWF 	UP7
	RETURN

RESET_TMR0
	BANKSEL TMR0			; Обнулить таймер 0
	MOVLW 	0x00			; Обнулить таймер 0
	MOVWF 	TMR0			; Обнулить таймер 0
	BCF 	INTCON, T0IF	; Обнулить таймер 0
	RETURN

INIT_LCD
	; Инициализация дисплея
	MOVLW 0x38 ; настройка шрифта
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x0C ; включается дисплей, отключается курсор и мигание
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	CALL RESET_LCD
	RETURN
   
RESET_LCD
	; Сброс дисплея
	MOVLW 0x01
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x80
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	RETURN

SW_ROW
	; Сброс дисплея
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	MOVLW 0x14
	MOVWF LCD_DATA
	CALL SEND_CMD_TO_LCD
	RETURN   
   
SEND_TO_LCD
	; Запись в сдвиговый регистр. В начале записывается число в обратном порядке
	; Потом значение для RS, RW, E
	BCF SH_CP
	BCF ST_CP

	BCF DS
	BTFSC LCD_DATA, 7
	BSF DS
	BSF SH_CP
	BCF SH_CP
   
	BCF DS
	BTFSC LCD_DATA, 6
	BSF DS
	BSF SH_CP
	BCF SH_CP
   
	BCF DS
	BTFSC LCD_DATA, 5
	BSF DS
	BSF SH_CP
	BCF SH_CP

	BCF DS
	BTFSC LCD_DATA, 4
	BSF DS
	BSF SH_CP
	BCF SH_CP

	BCF DS
	BTFSC LCD_DATA, 3
	BSF DS
	BSF SH_CP
	BCF SH_CP
   
	BCF DS
	BTFSC LCD_DATA, 2
	BSF DS
	BSF SH_CP
	BCF SH_CP
   
	BCF DS
	BTFSC LCD_DATA, 1
	BSF DS
	BSF SH_CP
	BCF SH_CP
   
	BCF DS
	BTFSC LCD_DATA, 0
	BSF DS
	BSF SH_CP
	BCF SH_CP
   
	BCF DS
	BTFSC LCD_SETTING, 2
	BSF DS
	BSF SH_CP
	BCF SH_CP
   
	BCF DS
	BTFSC LCD_SETTING, 1
	BSF DS
	BSF SH_CP
	BCF SH_CP
   
	BCF DS
	BTFSC LCD_SETTING, 0
	BSF DS
	BSF SH_CP
	BCF SH_CP
   
	BSF ST_CP
	BCF ST_CP  
	RETURN

SEND_CMD_TO_LCD
	; Отправка команды в дисплей. Сигнал RS равен 0 (т.к. команда), E = 1 (позволяет записать)
	MOVLW B'100'
	MOVWF LCD_SETTING
	CALL SEND_TO_LCD
	CALL DELAY_5MS
	; Сигнал E = 0
	MOVLW B'000'
	MOVWF LCD_SETTING
	CALL SEND_TO_LCD
	CALL DELAY_5MS
	RETURN

SEND_CHR_TO_LCD
	; Отправка символа в дисплей. Сигнал RS равен 1, E = 1 (позволяет записать)
	MOVLW B'101'
	MOVWF LCD_SETTING
	CALL SEND_TO_LCD
	CALL DELAY_5MS
	; Сигнал E = 0
	MOVLW B'001'
	MOVWF LCD_SETTING
	CALL SEND_TO_LCD
	CALL DELAY_5MS
	RETURN

; ЗАДЕРЖКА 1 ms
DELAY_1MS     
   MOVLW  	.75
   MOVWF   	DELAY_1
   MOVLW   	.2
   MOVWF   	DELAY_2
DELAY_1MS_LOOP
   DECFSZ  	DELAY_1, F
   GOTO    	DELAY_1MS_LOOP
   DECFSZ  	DELAY_2, F
   GOTO    	DELAY_1MS_LOOP
   RETURN

; ЗАДЕРЖКА 5 ms   
DELAY_5MS
   CALL 	DELAY_1MS
   CALL 	DELAY_1MS
   CALL 	DELAY_1MS
   CALL 	DELAY_1MS
   CALL 	DELAY_1MS
   RETURN

DELAY_1US
	NOP
	RETURN

DELAY_5US
	CALL	DELAY_1US
	CALL	DELAY_1US
	CALL	DELAY_1US
	CALL	DELAY_1US
	CALL	DELAY_1US
	RETURN

DELAY_10US
	CALL	DELAY_5US
	CALL	DELAY_5US
	RETURN

DELAY_100US
	CALL	DELAY_10US					; 1
	CALL	DELAY_10US					; 2
	CALL	DELAY_10US					; 3
	CALL	DELAY_10US					; 4
	CALL	DELAY_10US					; 5
	CALL	DELAY_10US					; 6
	CALL	DELAY_10US					; 7
	CALL	DELAY_10US					; 8
	CALL	DELAY_10US					; 9
	CALL	DELAY_10US					; 10
	RETURN

GET_TURNS
	MOVLW 	0x00
	ADDWF 	FRONTS, 0
	MOVWF	FRONT_DOUBLER

	CALL 	RESET_LCD
	CALL 	CONVERT_BIN_TO_BCD
	CALL 	PRINT
	
	MOVLW	0xF8
	BCF		STATUS, C
	ADDWF	FRONT_DOUBLER, 0
	BTFSC	STATUS, C
	CALL	MAKE_SOUND

	RETURN

CONVERT_BIN_TO_BCD
	CALL	RESET_FRONT_BCD_REGISTERS
	MOVLW	0x08
	MOVWF	REG_SHIFT_8

CONVERT_BCD_CYCLE
	CALL 	SHIFT_BCD
	DECFSZ	REG_SHIFT_8
	GOTO	REMAIN_CONVERT_BIN_TO_BCD
	GOTO 	CONVERTED

REMAIN_CONVERT_BIN_TO_BCD
	CALL 	ADD_3_BCD_IF_NEEDED
	GOTO 	CONVERT_BCD_CYCLE

CONVERTED
	RETURN
	
SHIFT_BCD
	BCF 	STATUS, C
	RLF 	FRONTS, 1
	RLF 	BCD_TENS_UNITS, 1
	RLF 	BCD_THOUSANDS_HUNDREDS, 1
	RETURN

ADD_3_BCD_IF_NEEDED
ANALYSE_THOSANDS
	SWAPF	BCD_THOUSANDS_HUNDREDS, F
	MOVLW	0x0F
	ANDWF	BCD_THOUSANDS_HUNDREDS, 0	; 0 - STORED IN W
	MOVWF	TEMP
	MOVLW	0xFB
	BCF		STATUS, C
	ADDWF 	TEMP, 0
	BTFSS	STATUS, C
	GOTO	ANALYSE_HUNDREDS
	MOVLW	0xF0
	ANDWF 	BCD_THOUSANDS_HUNDREDS, 1	; 1 - STORE IN F
	MOVLW	0x03
	ADDWF 	TEMP, 1
	MOVLW	0x0F
	ANDWF 	TEMP, 0						; 0 - STORE IN W
	ADDWF	BCD_THOUSANDS_HUNDREDS, 1

ANALYSE_HUNDREDS
	SWAPF	BCD_THOUSANDS_HUNDREDS, F
	MOVLW	0x0F
	ANDWF	BCD_THOUSANDS_HUNDREDS, 0	; 0 - STORED IN W
	MOVWF	TEMP
	MOVLW	0xFB
	BCF		STATUS, C
	ADDWF 	TEMP, 0
	BTFSS	STATUS, C
	GOTO	ANALYSE_TENS
	MOVLW	0xF0
	ANDWF 	BCD_THOUSANDS_HUNDREDS, 1	; 1 - STORE IN F
	MOVLW	0x03
	ADDWF 	TEMP, 1
	MOVLW	0x0F
	ANDWF 	TEMP, 0						; 0 - STORE IN W
	ADDWF	BCD_THOUSANDS_HUNDREDS, 1

ANALYSE_TENS
	SWAPF	BCD_TENS_UNITS, F
	MOVLW	0x0F
	ANDWF	BCD_TENS_UNITS, 0	; 0 - STORED IN W
	MOVWF	TEMP
	MOVLW	0xFB
	BCF		STATUS, C
	ADDWF 	TEMP, 0
	BTFSS	STATUS, C
	GOTO	ANALYSE_UNITS
	MOVLW	0xF0
	ANDWF 	BCD_TENS_UNITS, 1	; 1 - STORE IN F
	MOVLW	0x03
	ADDWF 	TEMP, 1
	MOVLW	0x0F
	ANDWF 	TEMP, 0						; 0 - STORE IN W
	ADDWF	BCD_TENS_UNITS, 1

ANALYSE_UNITS
	SWAPF	BCD_TENS_UNITS, F
	MOVLW	0x0F
	ANDWF	BCD_TENS_UNITS, 0	; 0 - STORED IN W
	MOVWF	TEMP
	MOVLW	0xFB
	BCF		STATUS, C
	ADDWF 	TEMP, 0
	BTFSS	STATUS, C
	GOTO	END_OF_IF_ADD_3
	MOVLW	0xF0
	ANDWF 	BCD_TENS_UNITS, 1	; 1 - STORE IN F
	MOVLW	0x03
	ADDWF 	TEMP, 1
	MOVLW	0x0F
	ANDWF 	TEMP, 0						; 0 - STORE IN W
	ADDWF	BCD_TENS_UNITS, 1

END_OF_IF_ADD_3
	RETURN

RESET_FRONT_BCD_REGISTERS
	MOVLW 	0x00			; Значения разрядов 0 ...
	MOVWF 	BCD_TENS_UNITS
	; ----------------------------------------------
	MOVLW 	0x00
	MOVWF 	BCD_THOUSANDS_HUNDREDS
	RETURN

PRINT
	; THIS FUNCTION WORKS OK
	BCF STATUS, RP0

	MOVLW	0x2D
	CALL	SCAN_FRONT
	BTFSC	GPIO, 0
	MOVLW	0x2B
	MOVWF 	LCD_DATA
	CALL 	SEND_CHR_TO_LCD
	
;	SWAPF	BCD_THOUSANDS_HUNDREDS, F
;	MOVLW	0x0F
;	ANDWF	BCD_THOUSANDS_HUNDREDS, 0	; 0 - STORED IN W
;	ADDLW 	0x30
;	MOVWF 	LCD_DATA
;	CALL 	SEND_CHR_TO_LCD
	;CALL 	DELAY_5MS

;	SWAPF	BCD_THOUSANDS_HUNDREDS, F
	MOVLW	0x0F
	ANDWF	BCD_THOUSANDS_HUNDREDS, 0	; 0 - STORED IN W
	ADDLW 	0x30
	MOVWF 	LCD_DATA
	CALL 	SEND_CHR_TO_LCD
	;CALL 	DELAY_5MS
	
	SWAPF	BCD_TENS_UNITS, F
	MOVLW	0x0F
	ANDWF	BCD_TENS_UNITS, 0	; 0 - STORED IN W
	ADDLW 	0x30
	MOVWF 	LCD_DATA
	CALL 	SEND_CHR_TO_LCD
	;CALL 	DELAY_5MS

	SWAPF	BCD_TENS_UNITS, F
	MOVLW	0x0F
	ANDWF	BCD_TENS_UNITS, 0	; 0 - STORED IN W
	ADDLW 	0x30
	MOVWF 	LCD_DATA
	CALL 	SEND_CHR_TO_LCD
	;CALL 	DELAY_5MS

	MOVLW	0x48			; H
	MOVWF 	LCD_DATA
	CALL 	SEND_CHR_TO_LCD

	MOVLW	0x7A			; z
	MOVWF 	LCD_DATA
	CALL 	SEND_CHR_TO_LCD
	
	RETURN

MAKE_SOUND
	MOVLW	0x2A
	MOVWF	SOUND_COUNTER_1
	MOVLW	0x0A
	MOVWF	SOUND_COUNTER_2

CONTINUE_SOUND
	BSF		GPIO, 5
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	BCF		GPIO, 5
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	CALL 	DELAY_10US
	DECFSZ	SOUND_COUNTER_1
	GOTO 	CONTINUE_SOUND
	DECFSZ	SOUND_COUNTER_2
	GOTO 	CONTINUE_SOUND
	RETURN

GLOBAL_END
   END